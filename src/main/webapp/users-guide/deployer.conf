

h1. Deployer

The following picture describes the architecture of the deployer.

!images/deployer.png!

h2. Spring deployer

Karaf includes a deployer that is able to deploy plain blueprint or spring-dm configuration files.
The deployer will transform on the fly any spring configuration file dropped into the {{deploy}} folder into a valid OSGi bundle.

The generated OSGi manifest will contain the following headers:

{code}
Manifest-Version: 2
Bundle-SymbolicName: [name of the file]
Bundle-Version: [version of the file]
Spring-Context: *;publish-context:=false;create-asynchronously:=true
Import-Package: [required packages]
DynamicImport-Package: *
{code}

The {{name}} and {{version}} of the file are extracted using a heuristic that will match common patterns.  For example {{my-config-1.0.1.xml}} will lead to {{name = my-config}} and {{version = 1.0.1}}.
The default imported packages are extracted from the spring file definition and includes all classes referenced directly.

If you need to customize the generated manifest, you can do so by including an xml element in your spring configuration:

{code:lang=xml}
<spring:beans ...>
  <manifest>
    Require-Bundle= my-bundle
  </manifest>
{code}

h2. Features deployer

To be able to hot deploy features from the deploy folder, you can just drop a feature descriptor on that folder.  A bundle will be created and its installation (automatic) will trigger the installation of all features contained in the descriptor.  Removing the file from the deploy folder will uninstall the features.
If you want to install a single feature, you can do so by writing a feature descriptor like the following:

{code:lang=xml}
<features>
  <repository>mvn:org.apache.servicemix.nmr/apache-servicemix-nmr/1.0.0/xml/features</repository>
  <feature name="nmr-only">
    <feature>nmr</feature>
  </feature>
</features>
{code}

For more informations about features, see the [provisioning section|provisioning].

h2. War deployer

To be able to hot deploy web application (war) from the deploy folder, you have to install the war feature:

{code}
karaf@root> features:install war
{code}

You should now be able to see the war deployer:

{code}
karaf@root> osgi:list |grep "WAR Deployer"
[  42] [Active     ] [Created     ] [   60] Apache Karaf :: WAR Deployer (2.0.1.SNAPSHOT)
{code}

You can deploy a web application packaged in war or exploded in a directory.

Your web application should at least contain a WEB-INF/web.xml file.