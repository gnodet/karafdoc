

{warning:title=Outdated documentation}

h1. Installing additional features

This chapter will demonstrate how to add additional features from a remote maven repository to a default installation of Karaf.

{info}Last updated September 3, 2010 using Karaf 2.0.0{info} 

h2. Adding additional feature repositories

The following steps will add in the URLs for the Camel & ActiveMQ features locations.
# Start Karaf
{noformat}
cd bin
./karaf or karaf.bat
{noformat}
# Add the following feature install locations
{noformat}
karaf@root> features:addUrl mvn:org.apache.activemq/activemq-karaf/5.4.0/xml/features 
karaf@root> features:addUrl mvn:org.apache.camel.karaf/features/2.0.0/xml/features 
{noformat}
# Verify the feature URLs were added -
{noformat}
karaf@root> features:listUrl 
mvn:org.apache.camel.karaf/features/2.0.0/xml/features valid 
mvn:org.apache.activemq/activemq-karaf/5.4.0/xml/features valid 
mvn:org.apache.karaf/apache-karaf/2.0.1-SNAPSHOT/xml/features valid 
{noformat}

h2. Installing a new feature (war)

The following steps will install the "war" feature (support for deploying WAR files with Servlet and JSPs into a Jetty server) into your Karaf instance.
# List the available features -
{noformat}
karaf@root> features:list 
 State        Name
. . .
[uninstalled] [2.0.0] obr karaf-2.0.0 
[uninstalled] [2.0.0] config karaf-2.0.0 
[uninstalled] [2.0.0] http karaf-2.0.0 
[uninstalled] [2.0.0] war karaf-2.0.0 
[uninstalled] [2.0.0] webconsole karaf-2.0.0 
[installed ] [2.0.0] ssh karaf-2.0.0 
. . .
{noformat}
# Install the war feature (and the sub-features it requires) -
{noformat}
karaf@root> features:install war 
{noformat}
# Verify the features were installed
{noformat}
servicemix> features/list
 State        Name
. . .
[installed ] [2.0.0] http karaf-2.0.0 
[installed ] [2.0.0] war karaf-2.0.0 
. . .
{noformat}
# Verify the installed bundles were started
{noformat}
karaf@root> osgi:list 
START LEVEL 100
   ID   State         Level  Name
. . .
[ 32] [Active ] [ ] [ 60] geronimo-servlet_2.5_spec (1.1.2) 
[ 33] [Active ] [ ] [ 60] Apache ServiceMix :: Bundles :: jetty (6.1.22.2) 
[ 34] [Active ] [ ] [ 60] OPS4J Pax Web - API (0.7.2) 
[ 35] [Active ] [ ] [ 60] OPS4J Pax Web - Service SPI (0.7.2) 
[ 36] [Active ] [ ] [ 60] OPS4J Pax Web - Runtime (0.7.2) 
[ 37] [Active ] [ ] [ 60] OPS4J Pax Web - Jetty (0.7.2) 
[ 38] [Active ] [ ] [ 60] OPS4J Pax Web - Jsp Support (0.7.2) 
[ 39] [Active ] [ ] [ 60] OPS4J Pax Web - Extender - WAR (0.7.2) 
[ 40] [Active ] [ ] [ 60] OPS4J Pax Web - Extender - Whiteboard (0.7.2) 
[ 41] [Active ] [ ] [ 60] OPS4J Pax Url - war:, war-i: (1.1.3) 
[ 42] [Active ] [Created ] [ 60] Apache Karaf :: WAR Deployer (2.0.0)
. . .
{noformat}
# The Jetty server should now be listening on http://localhost:8181/, but with no published applications available.
{noformat}
HTTP ERROR: 404
NOT_FOUND
RequestURI=/
Powered by jetty://
{noformat}

h2. Deploying a WAR to the installed web feature

The following steps will describe how to install a simple WAR file (with JSPs or Servlets) to the just installed web feature.
# To deploy a WAR (JSP or Servlet) to Jetty, update its MANIFEST.MF to include the required OSGi headers as described here - \\
[http://wiki.ops4j.org/confluence/display/ops4j/Pax+Web+Extender+-+War+-+OSGi-fy]
# Copy the updated WAR (archive or extracted files) to the _deploy_ directory.


